---
- name: Verify - execution
  hosts: slingnode-execution-01
  become: true
  gather_facts: false

  tasks:

    - name: Include test tasks
      ansible.builtin.include_tasks:
        file: ../resources/tests/execution.yml


    - name: GET consensus_client_metrics_port
      ansible.builtin.uri:
        url: "http://{{ hostvars['slingnode-consensus-01']['ansible_host'] }}:8008/metrics"
        method: GET
      register: consensus_client_metrics_port_response
      retries: 60
      delay: 3
      until: consensus_client_metrics_port_response['status'] == 200


- name: Verify - consensus
  hosts: slingnode-consensus-01
  become: true
  gather_facts: false

  tasks:

    - name: Include test tasks
      ansible.builtin.include_tasks:
        file: ../resources/tests/consensus.yml


    # This test is nit reliable, it relies on timing, it takes varied amount of time for the exec client
    # to be in the syncing state (geth was the most unreliable). to be revisited
    #
    # # https://ethereum.github.io/execution-apis/api-documentation/
    # - name: Call execution API from Consensus
    #   ansible.builtin.uri:
    #     url: "http://{{ hostvars['slingnode-execution-01']['ansible_host'] }}:8545"
    #     method: POST
    #     status_code:
    #       - 200
    #     return_content: true
    #     headers:
    #       Content-Type: application/json
    #     body_format: json
    #     body: '{"jsonrpc":"2.0","method":"eth_syncing","params":[],"id":1}'
    #   register: execution_eth_syncing_response


    # # Exec client returns false when it's not connected to beacon node
    # # when things are working is returns a sync details such as current block
    # - name: Assert execution node is syncing
    #   ansible.builtin.assert:
    #     that:
    #       - execution_eth_syncing_response['json']['result'] != false
    #   when: not clients.execution == "geth"


    - name: Call execution API from Consensus eth_chainId
      ansible.builtin.uri:
        url: "http://{{ hostvars['slingnode-execution-01']['ansible_host'] }}:8545"
        method: POST
        status_code:
          - 200
        return_content: true
        headers:
          Content-Type: application/json
        body_format: json
        body: '{"jsonrpc":"2.0","method":"eth_chainId","params":[],"id":0}'
      register: execution_eth_chainid_response
      retries: 60
      delay: 3
      until: execution_eth_chainid_response['status'] == 200


    - name: Assert execution API is responding
      ansible.builtin.assert:
        that:
          - execution_eth_chainid_response['json']['result'] == "0x5"


    - name: Call execution API from Consensus - authenticated
      ansible.builtin.uri:
        url: "http://{{ hostvars['slingnode-execution-01']['ansible_host'] }}:8551"
        method: POST
        status_code:
          - 401
          - 403
        return_content: true
        headers:
          Content-Type: application/json
        body_format: json
      register: execution_client_authrpc_port_response
      retries: 60
      delay: 3
      until: execution_client_authrpc_port_response['status'] == 401 or execution_client_authrpc_port_response['status'] == 403


    - name: GET execution_client_metrics_port
      ansible.builtin.uri:
        url: "http://{{ hostvars['slingnode-execution-01']['ansible_host'] }}:6060{{ '/metrics' if clients.execution == 'nethermind' or clients.execution == 'besu' else '/debug/metrics/prometheus' }}"
        method: GET
      register: execution_client_metrics_port_response
      retries: 60
      delay: 3
      until: execution_client_metrics_port_response['status'] == 200


    - name: GET  validator_client_metrics_port
      ansible.builtin.uri:
        url: "http://{{ hostvars['slingnode-validator-01']['ansible_host'] }}:8009/metrics"
        method: GET
      register: validator_client_metrics_port_response
      retries: 60
      delay: 3
      until: validator_client_metrics_port_response['status'] == 200


    - name: GET validator_api_port
      ansible.builtin.uri:
        url: "http://{{ hostvars['slingnode-validator-01']['ansible_host'] }}:7500/eth/v1/keystores"
        method: GET
        status_code:
          - 200
          - 401
      register: validator_api_port_response
      retries: 60
      delay: 3
      until: validator_api_port_response['status'] == 401 or validator_api_port_response['status'] == 200
      when: not clients.validator == "teku"


    - name: GET Teku validator_api_port
      ansible.builtin.uri:
        url: "https://{{ hostvars['slingnode-validator-01']['ansible_host'] }}:7500/eth/v1/keystores"
        method: GET
        status_code:
          - 200
          - 401
        validate_certs: false
      register: teku_validator_api_port_response
      retries: 60
      delay: 3
      until: teku_validator_api_port_response['status'] == 401 or teku_validator_api_port_response['status'] == 200
      when: clients.validator == "teku"


- name: Verify - validator
  hosts: slingnode-validator-01
  become: true
  gather_facts: false

  tasks:

    - name: Include test tasks
      ansible.builtin.include_tasks:
        file: ../resources/tests/validator.yml


    # https://ethereum.github.io/beacon-APIs/#/Node/getHealth
    - name: Call consensus beacon API from Validator
      ansible.builtin.uri:
        url: "http://{{ hostvars['slingnode-consensus-01']['ansible_host'] }}:5052/eth/v1/node/health"
        method: GET
        status_code:
          - 200 # Node is ready
          - 206 # Node is syncing but can serve incomplete data
      register: consensus_beacon_health_response
      retries: 60
      delay: 3
      until: consensus_beacon_health_response['status'] == 200 or consensus_beacon_health_response['status'] == 206
